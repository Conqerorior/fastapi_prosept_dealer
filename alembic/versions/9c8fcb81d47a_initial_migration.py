"""Initial migration

Revision ID: 9c8fcb81d47a
Revises: 
Create Date: 2023-12-04 10:00:30.963309

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9c8fcb81d47a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('marketing_dealer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marketing_dealer_id'), 'marketing_dealer', ['id'], unique=False)
    op.create_table('marketing_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article', sa.Integer(), nullable=False, comment='артикул товара'),
    sa.Column('ean_13', sa.String(), nullable=True, comment='код товара'),
    sa.Column('cost', sa.Float(), nullable=False, comment='стоимость'),
    sa.Column('name', sa.String(), nullable=True, comment='название товара'),
    sa.Column('min_recommended_price', sa.Float(), nullable=True, comment='рекомендованная минимальная цена'),
    sa.Column('recommended_price', sa.Float(), nullable=True, comment='рекомендованная цена'),
    sa.Column('category_id', sa.String(), nullable=True, comment='категория товара'),
    sa.Column('ozon_name', sa.String(), nullable=True, comment='названиет товара на Озоне'),
    sa.Column('name_1c', sa.String(), nullable=False, comment='название товара в 1C'),
    sa.Column('wb_name', sa.String(), nullable=True, comment='название товара на Wildberries'),
    sa.Column('ozon_article', sa.String(), nullable=True, comment='описание для Озон'),
    sa.Column('wb_article', sa.String(), nullable=True, comment='артикул для Wildberries'),
    sa.Column('ym_article', sa.String(), nullable=True, comment='артикул для Яндекс.Маркета'),
    sa.Column('wb_article_td', sa.String(), nullable=True, comment='артикул для Wildberries td'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marketing_product_id'), 'marketing_product', ['id'], unique=False)
    op.create_table('statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('accepted_cards', sa.Integer(), nullable=True, comment='Количество принятых карточек'),
    sa.Column('delete_cards', sa.Integer(), nullable=True, comment='Количество неподходящих карточек'),
    sa.Column('postponed_cards', sa.Integer(), nullable=True, comment='Количество отложенных карточек'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_statistics_id'), 'statistics', ['id'], unique=False)
    op.create_table('marketing_dealerprice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_key', sa.String(), nullable=True, comment='уникальный номер позиции'),
    sa.Column('price', sa.Float(), nullable=False, comment='цена'),
    sa.Column('product_url', sa.String(), nullable=False, comment='адрес страницы, откуда собраны данные'),
    sa.Column('product_name', sa.String(), nullable=False, comment='заголовок продаваемого товара'),
    sa.Column('date', sa.DateTime(), nullable=True, comment='дата получения информации'),
    sa.Column('dealer_id', sa.Integer(), nullable=False, comment='идентификатор дилера'),
    sa.ForeignKeyConstraint(['dealer_id'], ['marketing_dealer.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_key')
    )
    op.create_index(op.f('ix_marketing_dealerprice_id'), 'marketing_dealerprice', ['id'], unique=False)
    op.create_table('del_matching_product_dealer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_ids', sa.ARRAY(sa.Integer()), nullable=True, comment='Пять ID товаров от Просепт'),
    sa.Column('dealer_product_id', sa.Integer(), nullable=True, comment='ID товара от диллера'),
    sa.ForeignKeyConstraint(['dealer_product_id'], ['marketing_dealerprice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_del_matching_product_dealer_id'), 'del_matching_product_dealer', ['id'], unique=False)
    op.create_table('marketing_productdealerkey',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('dealer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dealer_id'], ['marketing_dealer.id'], ),
    sa.ForeignKeyConstraint(['key'], ['marketing_dealerprice.product_key'], ),
    sa.ForeignKeyConstraint(['product_id'], ['marketing_product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_positive_prod_dealer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dealer_product_id', sa.Integer(), nullable=True, comment='ID товара от дилера'),
    sa.Column('product_id', sa.Integer(), nullable=True, comment='ID товара Просепт'),
    sa.ForeignKeyConstraint(['dealer_product_id'], ['marketing_dealerprice.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['marketing_product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_positive_prod_dealer_id'), 'match_positive_prod_dealer', ['id'], unique=False)
    op.create_table('matching_product_dealer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_ids', sa.ARRAY(sa.Integer()), nullable=True, comment='Пять ID товаров от Просепт'),
    sa.Column('dealer_product_id', sa.Integer(), nullable=True, comment='ID товара от диллера'),
    sa.Column('order', sa.Integer(), nullable=True, comment='Поле для сортировки. Для реализации кнопки «Отложить»'),
    sa.ForeignKeyConstraint(['dealer_product_id'], ['marketing_dealerprice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_matching_product_dealer_id'), 'matching_product_dealer', ['id'], unique=False)
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.drop_index(op.f('ix_matching_product_dealer_id'), table_name='matching_product_dealer')
    op.drop_table('matching_product_dealer')
    op.drop_index(op.f('ix_match_positive_prod_dealer_id'), table_name='match_positive_prod_dealer')
    op.drop_table('match_positive_prod_dealer')
    op.drop_table('marketing_productdealerkey')
    op.drop_index(op.f('ix_del_matching_product_dealer_id'), table_name='del_matching_product_dealer')
    op.drop_table('del_matching_product_dealer')
    op.drop_index(op.f('ix_marketing_dealerprice_id'), table_name='marketing_dealerprice')
    op.drop_table('marketing_dealerprice')
    op.drop_index(op.f('ix_statistics_id'), table_name='statistics')
    op.drop_table('statistics')
    op.drop_index(op.f('ix_marketing_product_id'), table_name='marketing_product')
    op.drop_table('marketing_product')
    op.drop_index(op.f('ix_marketing_dealer_id'), table_name='marketing_dealer')
    op.drop_table('marketing_dealer')
    # ### end Alembic commands ###
